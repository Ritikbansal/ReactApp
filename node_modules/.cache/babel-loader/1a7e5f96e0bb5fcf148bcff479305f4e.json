{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\app1\\\\src\\\\components\\\\Audio.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react'; //import song from './Suncrown - Legend of the Forgotten Centuries.mp3'\n\nimport Slider from './Slider';\nimport ControlPanel from './ControlPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Audio() {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const audioRef = useRef();\n\n  const onChange = e => {\n    const audio = audioRef.current;\n    audio.currentTime = audio.duration / 100 * e.target.value;\n    setPercentage(e.target.value);\n  };\n\n  const play = () => {\n    const audio = audioRef.current;\n    audio.volume = 0.1;\n\n    if (!isPlaying) {\n      setIsPlaying(true);\n      audio.play();\n    }\n\n    if (isPlaying) {\n      setIsPlaying(false);\n      audio.pause();\n    }\n  };\n\n  const getCurrDuration = e => {\n    const percent = (e.currentTarget.currentTime / e.currentTarget.duration * 100).toFixed(2);\n    setPercentage(+percent); //console.log(+percent);\n\n    setCurrentTime(e.currentTarget.currentTime.toFixed(2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      percentage: percentage,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onTimeUpdate: getCurrDuration,\n      onLoadedData: e => {\n        setDuration(e.currentTarget.duration.toFixed(2));\n      },\n      src: \"http://wb.saccount.workers.dev/0:/listringtones-com-iphone-trap-remix-53551.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      play: play,\n      isPlaying: isPlaying,\n      duration: duration,\n      currentTime: currentTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Audio, \"hWzC6cXACk0W7vgDeg1g+KdNPG4=\");\n\n_c = Audio;\nexport default Audio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"sources":["E:/react/app1/src/components/Audio.js"],"names":["useState","useRef","Slider","ControlPanel","Audio","percentage","setPercentage","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","audioRef","onChange","e","audio","current","target","value","play","volume","pause","getCurrDuration","percent","currentTarget","toFixed"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAMa,QAAQ,GAAGZ,MAAM,EAAvB;;AAEA,QAAMa,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAMC,KAAK,GAAGH,QAAQ,CAACI,OAAvB;AACAD,IAAAA,KAAK,CAACL,WAAN,GAAqBK,KAAK,CAACP,QAAN,GAAiB,GAAlB,GAAyBM,CAAC,CAACG,MAAF,CAASC,KAAtD;AACAb,IAAAA,aAAa,CAACS,CAAC,CAACG,MAAF,CAASC,KAAV,CAAb;AACD,GAJD;;AAMA,QAAMC,IAAI,GAAG,MAAM;AACjB,UAAMJ,KAAK,GAAGH,QAAQ,CAACI,OAAvB;AACAD,IAAAA,KAAK,CAACK,MAAN,GAAe,GAAf;;AAEA,QAAI,CAACd,SAAL,EAAgB;AACdC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,MAAAA,KAAK,CAACI,IAAN;AACD;;AAED,QAAIb,SAAJ,EAAe;AACbC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,MAAAA,KAAK,CAACM,KAAN;AACD;AACF,GAbD;;AAeA,QAAMC,eAAe,GAAIR,CAAD,IAAO;AAC7B,UAAMS,OAAO,GAAG,CAAET,CAAC,CAACU,aAAF,CAAgBd,WAAhB,GAA8BI,CAAC,CAACU,aAAF,CAAgBhB,QAA/C,GAA2D,GAA5D,EAAiEiB,OAAjE,CAAyE,CAAzE,CAAhB;AAGApB,IAAAA,aAAa,CAAC,CAACkB,OAAF,CAAb,CAJ6B,CAK7B;;AACAZ,IAAAA,cAAc,CAACG,CAAC,CAACU,aAAF,CAAgBd,WAAhB,CAA4Be,OAA5B,CAAoC,CAApC,CAAD,CAAd;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAErB,UAApB;AAAgC,MAAA,QAAQ,EAAES;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,GAAG,EAAED,QADP;AAEE,MAAA,YAAY,EAAEU,eAFhB;AAGE,MAAA,YAAY,EAAGR,CAAD,IAAO;AACnBL,QAAAA,WAAW,CAACK,CAAC,CAACU,aAAF,CAAgBhB,QAAhB,CAAyBiB,OAAzB,CAAiC,CAAjC,CAAD,CAAX;AAED,OANH;AAOE,MAAA,GAAG,EAAC;AAPN;AAAA;AAAA;AAAA;AAAA,YAHF,eAYE,QAAC,YAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,SAAS,EAAEb,SAFb;AAGE,MAAA,QAAQ,EAAEE,QAHZ;AAIE,MAAA,WAAW,EAAEE;AAJf;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA3DQP,K;;KAAAA,K;AA6DT,eAAeA,KAAf","sourcesContent":["import { useState, useRef } from 'react'\r\n//import song from './Suncrown - Legend of the Forgotten Centuries.mp3'\r\nimport Slider from './Slider'\r\nimport ControlPanel from './ControlPanel'\r\n\r\nfunction Audio() {\r\n  const [percentage, setPercentage] = useState(0)\r\n  const [isPlaying, setIsPlaying] = useState(false)\r\n  const [duration, setDuration] = useState(0)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const audioRef = useRef()\r\n\r\n  const onChange = (e) => {\r\n    const audio = audioRef.current\r\n    audio.currentTime = (audio.duration / 100) * e.target.value\r\n    setPercentage(e.target.value)\r\n  }\r\n\r\n  const play = () => {\r\n    const audio = audioRef.current\r\n    audio.volume = 0.1\r\n\r\n    if (!isPlaying) {\r\n      setIsPlaying(true)\r\n      audio.play()\r\n    }\r\n\r\n    if (isPlaying) {\r\n      setIsPlaying(false)\r\n      audio.pause()\r\n    }\r\n  }\r\n\r\n  const getCurrDuration = (e) => {\r\n    const percent = ((e.currentTarget.currentTime / e.currentTarget.duration) * 100).toFixed(2)\r\n     \r\n\r\n    setPercentage(+percent)\r\n    //console.log(+percent);\r\n    setCurrentTime(e.currentTarget.currentTime.toFixed(2))\r\n  }\r\n\r\n  return (\r\n    <div className='app-container'>\r\n      <h1>Audio Player</h1>\r\n      <Slider percentage={percentage} onChange={onChange} />\r\n      <audio\r\n        ref={audioRef}\r\n        onTimeUpdate={getCurrDuration}\r\n        onLoadedData={(e) => {\r\n          setDuration(e.currentTarget.duration.toFixed(2))\r\n          \r\n        }}\r\n        src=\"http://wb.saccount.workers.dev/0:/listringtones-com-iphone-trap-remix-53551.mp3\"\r\n      ></audio>\r\n      <ControlPanel\r\n        play={play}\r\n        isPlaying={isPlaying}\r\n        duration={duration}\r\n        currentTime={currentTime}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Audio"]},"metadata":{},"sourceType":"module"}