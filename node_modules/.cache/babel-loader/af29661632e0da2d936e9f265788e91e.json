{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\app1\\\\src\\\\components\\\\MusicCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react'; //import song from './Suncrown - Legend of the Forgotten Centuries.mp3'\n\nimport Slider from './Slider';\nimport ControlPanel from './ControlPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MusicCard() {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const audioRef = useRef();\n\n  const onChange = e => {\n    const audio = audioRef.current;\n    audio.currentTime = audio.duration / 100 * e.target.value;\n    setPercentage(e.target.value);\n  };\n\n  const play = () => {\n    const audio = audioRef.current;\n    audio.volume = 0.1;\n\n    if (!isPlaying) {\n      setIsPlaying(true);\n      audio.play();\n    }\n\n    if (isPlaying) {\n      setIsPlaying(false);\n      audio.pause();\n    }\n  };\n\n  const getCurrDuration = e => {\n    const percent = (e.currentTarget.currentTime / e.currentTarget.duration * 100).toFixed(2);\n    setPercentage(+percent); //console.log(+percent);\n\n    setCurrentTime(e.currentTarget.currentTime.toFixed(2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card text-center\",\n      style: {\n        \"width\": \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-header\",\n        children: \"Featured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col col-lg-12\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://wb.saccount.workers.dev/0:/photo_2021-05-10_06-37-40.jpg\",\n            style: {\n              \"margin-left\": \"-30%\",\n              \"height\": \"100%\",\n              \"width\": \"70%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col col-lg-12\",\n          style: {\n            \"margin-left\": \"-10%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Slider, {\n            percentage: percentage,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: audioRef,\n            onTimeUpdate: getCurrDuration,\n            onLoadedData: e => {\n              setDuration(e.currentTarget.duration.toFixed(2));\n            },\n            src: \"http://wb.saccount.workers.dev/0:/listringtones-com-iphone-trap-remix-53551.mp3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n            play: play,\n            isPlaying: isPlaying,\n            duration: duration,\n            currentTime: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-footer text-muted\",\n        children: \"2 days ago\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(MusicCard, \"hWzC6cXACk0W7vgDeg1g+KdNPG4=\");\n\n_c = MusicCard;\nexport default MusicCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicCard\");","map":{"version":3,"sources":["E:/react/app1/src/components/MusicCard.js"],"names":["useState","useRef","Slider","ControlPanel","MusicCard","percentage","setPercentage","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","audioRef","onChange","e","audio","current","target","value","play","volume","pause","getCurrDuration","percent","currentTarget","toFixed"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react'\r\n//import song from './Suncrown - Legend of the Forgotten Centuries.mp3'\r\nimport Slider from './Slider'\r\nimport ControlPanel from './ControlPanel'\r\nfunction MusicCard() {\r\n    const [percentage, setPercentage] = useState(0)\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    const [duration, setDuration] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState(0)\r\n  \r\n    const audioRef = useRef()\r\n  \r\n    const onChange = (e) => {\r\n      const audio = audioRef.current\r\n      audio.currentTime = (audio.duration / 100) * e.target.value\r\n      setPercentage(e.target.value)\r\n    }\r\n  \r\n    const play = () => {\r\n      const audio = audioRef.current\r\n      audio.volume = 0.1\r\n  \r\n      if (!isPlaying) {\r\n        setIsPlaying(true)\r\n        audio.play()\r\n      }\r\n  \r\n      if (isPlaying) {\r\n        setIsPlaying(false)\r\n        audio.pause()\r\n      }\r\n    }\r\n  \r\n    const getCurrDuration = (e) => {\r\n      const percent = ((e.currentTarget.currentTime / e.currentTarget.duration) * 100).toFixed(2)\r\n       \r\n  \r\n      setPercentage(+percent)\r\n      //console.log(+percent);\r\n      setCurrentTime(e.currentTarget.currentTime.toFixed(2))\r\n    }\r\n  \r\n\r\n    return(<>\r\n    \r\n<div class=\"card text-center\" style={{\"width\":\"100%\"}}>\r\n  <div class=\"card-header\">\r\n    Featured\r\n  </div>\r\n  <div class=\"row\">\r\n     <div class=\"col col-lg-12\">\r\n   <img src=\"http://wb.saccount.workers.dev/0:/photo_2021-05-10_06-37-40.jpg\" style={{\"margin-left\":\"-30%\",\"height\":\"100%\",\"width\":\"70%\"}}/>\r\n     </div>\r\n     <div class=\"col col-lg-12\" style={{\"margin-left\":\"-10%\"}}>\r\n  <Slider percentage={percentage} onChange={onChange} />\r\n      <audio\r\n        ref={audioRef}\r\n        onTimeUpdate={getCurrDuration}\r\n        onLoadedData={(e) => {\r\n          setDuration(e.currentTarget.duration.toFixed(2))\r\n          \r\n        }}\r\n        src=\"http://wb.saccount.workers.dev/0:/listringtones-com-iphone-trap-remix-53551.mp3\"\r\n      ></audio>\r\n      <ControlPanel\r\n        play={play}\r\n        isPlaying={isPlaying}\r\n        duration={duration}\r\n        currentTime={currentTime}\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"card-footer text-muted\">\r\n    2 days ago\r\n  </div>\r\n</div>\r\n       \r\n    \r\n </>\r\n    )\r\n}\r\nexport default MusicCard;"]},"metadata":{},"sourceType":"module"}